{"name":"Coursera Machine Learning  Project","tagline":"Model Activity Quality from Activity Monitor Parameters","body":"<title>Machine Learning Coursera Project</title>\r\n</head>\r\n<body>\r\n<div id=\"header\">\r\n<h1 class=\"title\">Machine Learning Coursera Project</h1>\r\n<h4 class=\"author\"><em>Karthik Viswanath</em></h4>\r\n<h4 class=\"date\"><em>Tuesday, February 10, 2015</em></h4>\r\n</div>\r\n\r\n\r\n<div id=\"introduction\" class=\"section level1\">\r\n<h1>Introduction</h1>\r\n<p>This project write-up is related to project work in Coursera course titled “Practical Machine Learning”.<br />The main goal of the project is to predict the manner in which the test subjects did the exercise based on a number of parameters captured by activity monitors, as detailed out in the data set. The data set and other project details can be found on the coursera page - <a href=\"https://class.coursera.org/predmachlearn-011/human_grading\">https://class.coursera.org/predmachlearn-011/human_grading</a></p>\r\n<p>As part of the project, we have to come up with the following<br />1. Model to predict activity type with details on analysis<br />2. Apply the model to predict activity type for 20 test cases provided<br />3. Calculate and state the accuracy and out of sample error rate<br />4. Submit the prediction for auto grading (Outside of this project write-up)</p>\r\n</div>\r\n<div id=\"project-pre-setup\" class=\"section level1\">\r\n<h1>Project Pre-Setup</h1>\r\n<p>Load required libraries and read data into R.</p>\r\n<pre class=\"r\"><code># Load required Libraries\r\nlibrary(caret)</code></pre>\r\n<pre><code>## Loading required package: lattice\r\n## Loading required package: ggplot2</code></pre>\r\n<pre class=\"r\"><code>library(randomForest)</code></pre>\r\n<pre><code>## randomForest 4.6-10\r\n## Type rfNews() to see new features/changes/bug fixes.</code></pre>\r\n<pre class=\"r\"><code>library(corrplot)\r\n\r\n# Read the training and testing data sets\r\npml.training &lt;- read.csv(file=&quot;pml-training.csv&quot;,na.strings=c(&quot;&quot;, &quot;NA&quot;, &quot;NULL&quot;,&quot;#DIV/0!&quot;))\r\npml.testing &lt;- read.csv(file=&quot;pml-testing.csv&quot;,na.strings=c(&quot;&quot;, &quot;NA&quot;, &quot;NULL&quot;,&quot;#DIV/0!&quot;))\r\n\r\nset.seed(1336)  # Setting seed for reproducibility</code></pre>\r\n</div>\r\n<div id=\"tidy-data-set\" class=\"section level1\">\r\n<h1>Tidy Data Set</h1>\r\n<p>Cleanup training and testing data sets before modeling<br />1. Remove variables not contributing to ‘classe’ - Exploratory data analysis, reading data set description<br />We see that the first 7 variables in the data set match this and can be safely removed</p>\r\n<pre class=\"r\"><code>names(pml.training)[1:7]</code></pre>\r\n<pre><code>## [1] &quot;X&quot;                    &quot;user_name&quot;            &quot;raw_timestamp_part_1&quot;\r\n## [4] &quot;raw_timestamp_part_2&quot; &quot;cvtd_timestamp&quot;       &quot;new_window&quot;          \r\n## [7] &quot;num_window&quot;</code></pre>\r\n<pre class=\"r\"><code>pml.training &lt;- pml.training[,-(1:7)]\r\npml.testing &lt;- pml.testing[,-(1:7)]</code></pre>\r\n<ol start=\"2\" style=\"list-style-type: decimal\">\r\n<li>Remove those variables where more than 60% of data is NA. This will mess up the prediction as it will result in incorrect prediction.<br />Also, imputing will not work (rather, will not be correct) for so many missing values. We see that there are 100 variables with &gt;=60% missing values. Removing them</li>\r\n</ol>\r\n<pre class=\"r\"><code>pml.training &lt;- pml.training[,colSums(is.na(pml.training))/nrow(pml.training)&lt;0.60]\r\npml.testing &lt;- pml.testing[,colSums(is.na(pml.testing))/nrow(pml.testing)&lt;0.60]</code></pre>\r\n<p>None of the remaining 53 variables have NAs. So no need to impute.<br />There are no near zero variance predictors as well.</p>\r\n<pre class=\"r\"><code>nzvTrain &lt;- nearZeroVar(pml.training); length(nzvTrain)</code></pre>\r\n<pre><code>## [1] 0</code></pre>\r\n<pre class=\"r\"><code>nzvTest &lt;- nearZeroVar(pml.testing); length(nzvTest)</code></pre>\r\n<pre><code>## [1] 0</code></pre>\r\n<p>Partition ‘pml.training’ data into ‘training’ and ‘testing’ with 60% and 40% respectively</p>\r\n<pre class=\"r\"><code>inTrain &lt;- createDataPartition(y=pml.training$classe, p=0.6, list=FALSE)\r\ntraining &lt;- pml.training[inTrain,]\r\ntesting &lt;- pml.training[-inTrain,]\r\ndim(training)</code></pre>\r\n<pre><code>## [1] 11776    53</code></pre>\r\n<pre class=\"r\"><code>dim(testing)</code></pre>\r\n<pre><code>## [1] 7846   53</code></pre>\r\n<pre class=\"r\"><code>dim(training)[1]/dim(pml.training)[1]</code></pre>\r\n<pre><code>## [1] 0.6001</code></pre>\r\n<pre class=\"r\"><code>dim(testing)[1]/dim(pml.training)[1]</code></pre>\r\n<pre><code>## [1] 0.3999</code></pre>\r\n<pre class=\"r\"><code># As we can see pml.training dataset is correctly partiotined into 60% training and 40% testing data sets.</code></pre>\r\n</div>\r\n<div id=\"data-modeling\" class=\"section level1\">\r\n<h1>Data Modeling</h1>\r\n<p>We will fit a predictive model using Random Forest as it automatically selects important covariates (So, I am not preprocessing with PCA to nullify the effect of Multicollinearity) and is robust to outliers.<br />Also, from the Correlation Matrix plot (Appendix) we can see that there is not much collinearity. Whatever is there will be taken care by the Random Forest algorithm in choosing the right combination of covariates.</p>\r\n<div id=\"model-creation-with-cross-validation\" class=\"section level2\">\r\n<h2>Model Creation with Cross Validation</h2>\r\n<p>For cross validation, we will use 5-fold cross validation when applying “rf” algorithm.</p>\r\n<pre class=\"r\"><code>rfControl &lt;- trainControl(method=&quot;cv&quot;,5)\r\nrfModel &lt;- train(classe ~ ., data=training, method=&quot;rf&quot;, trControl=rfControl, ntree=250)</code></pre>\r\n</div>\r\n<div id=\"validate-the-model\" class=\"section level2\">\r\n<h2>Validate the model</h2>\r\n<p>Lets now estimate the model on the validation data set</p>\r\n<pre class=\"r\"><code>rfPredict &lt;- predict(rfModel,testing)\r\nconfusionMatrix(testing$classe,rfPredict)</code></pre>\r\n<pre><code>## Confusion Matrix and Statistics\r\n## \r\n##           Reference\r\n## Prediction    A    B    C    D    E\r\n##          A 2230    0    0    0    2\r\n##          B   17 1497    3    1    0\r\n##          C    0    7 1360    1    0\r\n##          D    0    0   12 1271    3\r\n##          E    0    1    0    0 1441\r\n## \r\n## Overall Statistics\r\n##                                         \r\n##                Accuracy : 0.994         \r\n##                  95% CI : (0.992, 0.996)\r\n##     No Information Rate : 0.286         \r\n##     P-Value [Acc &gt; NIR] : &lt;2e-16        \r\n##                                         \r\n##                   Kappa : 0.992         \r\n##  Mcnemar's Test P-Value : NA            \r\n## \r\n## Statistics by Class:\r\n## \r\n##                      Class: A Class: B Class: C Class: D Class: E\r\n## Sensitivity             0.992    0.995    0.989    0.998    0.997\r\n## Specificity             1.000    0.997    0.999    0.998    1.000\r\n## Pos Pred Value          0.999    0.986    0.994    0.988    0.999\r\n## Neg Pred Value          0.997    0.999    0.998    1.000    0.999\r\n## Prevalence              0.286    0.192    0.175    0.162    0.184\r\n## Detection Rate          0.284    0.191    0.173    0.162    0.184\r\n## Detection Prevalence    0.284    0.193    0.174    0.164    0.184\r\n## Balanced Accuracy       0.996    0.996    0.994    0.998    0.998</code></pre>\r\n<pre class=\"r\"><code>accuracy &lt;- postResample(rfPredict,testing$classe)\r\naccuracy</code></pre>\r\n<pre><code>## Accuracy    Kappa \r\n##   0.9940   0.9924</code></pre>\r\n<pre class=\"r\"><code>outOfSampleError &lt;-  1 - as.numeric(accuracy[1])\r\noutOfSampleError</code></pre>\r\n<pre><code>## [1] 0.00599</code></pre>\r\n<p>The Accuracy of the model is 0.994 and the estimated out of sample error rate is 0.006 as calculated above.</p>\r\n</div>\r\n<div id=\"final-prediction\" class=\"section level2\">\r\n<h2>Final Prediction</h2>\r\n<p>Final prediction on Test Data Set ( 20 different test cases)<br />Now that our model is satisfactory with expected accuracy, we will apply it to the test data set downloaded from source..</p>\r\n<pre class=\"r\"><code># Remove the problem_id column in test data set\r\npml.testing$problem_id &lt;-NULL\r\nfinalResult &lt;- predict(rfModel,pml.testing)\r\nfinalResult</code></pre>\r\n<pre><code>##  [1] B A B A A E D B A A B C B A E E A B B B\r\n## Levels: A B C D E</code></pre>\r\n<p>As a conclusion, we can say that the model is able to provide good prediction of activity quality from activity monitors.</p>\r\n</div>\r\n</div>\r\n<div id=\"appendix\" class=\"section level1\">\r\n<h1>Appendix</h1>\r\n<pre class=\"r\"><code>corrPlot &lt;- cor(pml.training[,-53])\r\ncorrplot(corrPlot, method=&quot;color&quot;)</code></pre>\r\n</div>\r\n\r\n![Correlation Plot](https://raw.githubusercontent.com/karthikrv82/Coursera_MP_Project/gh-pages/images/corrplot.png)\r\n\r\n<div id=\"references\" class=\"section level1\">\r\n<h1>References</h1>\r\n<p>Velloso, E.; Bulling, A.; Gellersen, H.; Ugulino, W.; Fuks, H. Qualitative Activity Recognition of Weight Lifting Exercises. Proceedings of 4th International Conference in Cooperation with SIGCHI (Augmented Human ’13) . Stuttgart, Germany: ACM SIGCHI, 2013.</p>\r\n<p>Read more: <a href=\"http://groupware.les.inf.puc-rio.br/har#ixzz3RMZaUneZ\">http://groupware.les.inf.puc-rio.br/har#ixzz3RMZaUneZ</a></p>\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n<script>\r\n// add bootstrap table styles to pandoc tables\r\n$(document).ready(function () {\r\n  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');\r\n});\r\n</script>\r\n\r\n<!-- dynamically load mathjax for compatibility with --self-contained -->\r\n<script>\r\n  (function () {\r\n    var script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src  = \"https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n  })();\r\n</script>\r\n\r\n</body>\r\n</html>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}